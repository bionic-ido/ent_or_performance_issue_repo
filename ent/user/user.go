// Code generated by entc, DO NOT EDIT.

package user

const (
	// Label holds the string label denoting the user type in the database.
	Label = "user"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldAge holds the string denoting the age field in the database.
	FieldAge = "age"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldMemberAdminID holds the string denoting the member_admin_id field in the database.
	FieldMemberAdminID = "member_admin_id"
	// FieldLeadAdminID holds the string denoting the lead_admin_id field in the database.
	FieldLeadAdminID = "lead_admin_id"
	// EdgeMemberAdmin holds the string denoting the member_admin edge name in mutations.
	EdgeMemberAdmin = "member_admin"
	// EdgeLeadAdmin holds the string denoting the lead_admin edge name in mutations.
	EdgeLeadAdmin = "lead_admin"
	// Table holds the table name of the user in the database.
	Table = "users"
	// MemberAdminTable is the table that holds the member_admin relation/edge.
	MemberAdminTable = "users"
	// MemberAdminInverseTable is the table name for the Admin entity.
	// It exists in this package in order to avoid circular dependency with the "admin" package.
	MemberAdminInverseTable = "admins"
	// MemberAdminColumn is the table column denoting the member_admin relation/edge.
	MemberAdminColumn = "member_admin_id"
	// LeadAdminTable is the table that holds the lead_admin relation/edge.
	LeadAdminTable = "users"
	// LeadAdminInverseTable is the table name for the Admin entity.
	// It exists in this package in order to avoid circular dependency with the "admin" package.
	LeadAdminInverseTable = "admins"
	// LeadAdminColumn is the table column denoting the lead_admin relation/edge.
	LeadAdminColumn = "lead_admin_id"
)

// Columns holds all SQL columns for user fields.
var Columns = []string{
	FieldID,
	FieldAge,
	FieldName,
	FieldMemberAdminID,
	FieldLeadAdminID,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}
